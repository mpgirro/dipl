[INCLUDE=style/marticle]

Title        : Literature by Topics

Bibliography : dipl
Bib style    : alpha
Cite All     : False

# Paradigms

## OOP


* SOLID design principles https://en.wikipedia.org/wiki/SOLID_(object-oriented_design)
    * ive design principles intended to make software designs more:
        * understandable
        * flexible
        * maintainable

## Flow-based Programming

* "Encapsulation, however, predates OOP - David Parnas wrote one of the seminal articles on it in the early 70s[19] - and is a basic concept in computing." (*D. Parnas, On the criteria to be used in decomposing systems into modules, Communications of the ACM, Vol. 5, No. 12, Dec. 1972, pp. 1053-8*)


# Concurrency

## Active Objects 

* "A paper by C. Ellis and S. Gibbs distinguishes between active objects and passive objects.[20] Passive objects comprise information and behaviour, as stated above, but they cannot determine the timing of this behaviour. Active objects on the other hand can do this. In their article Ellis and Gibbs state that active objects have much more potential for the development of maintainable systems than do passive objects." (*C. Ellis and S. Gibbs, Active Objects: Realities and Possibilities, in Object-Oriented Concepts, Databases, and Applications, eds. W. Kim and F.H. Lochovsky, ACM Press, Addison-Wesley, 1989*)

