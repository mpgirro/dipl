


@masterthesis{montesi2010jolie,
  title={Jolie: a service-oriented programming language},
  author={Montesi, Fabrizio},
  year={2010}
}

@incollection{MGZ14,
  title={{Service-Oriented Programming with Jolie}},
  author={Montesi, Fabrizio and Guidi, Claudio and Zavattaro, Gianluigi},
  booktitle={Web Services Foundations},
  pages={81--107},
  year={2014},
  publisher={Springer}
}

@phdthesis{montesi2014choreographic,
  title={Choreographic programming},
  author={Montesi, Fabrizio},
  year={2014},
  publisher={InstituttetThe Department, Software and SystemsSoftware \& Systems, Programming, Logic and SemanticsProgramming, Logic and Semantics}
}

@masterthesis{Erb2012,
  author = {Benjamin Erb},
  title = {Concurrent Programming for Scalable Web Architectures},
  school = {Institute of Distributed Systems, Ulm University},
  year = {2012},
  type = {Diploma Thesis},
  keywords = {web, scalability, architecture, concurrency},
  month = {April},
  number = {VS-D01-2012},
  url = {http://www.benjamin-erb.de/thesis}
} 

/*
 
- "Before presenting the current state-of-the-art in the field, this chapter reviews the history of software architecture, the reasons that led to the diffusion of objects and services first, and microservices later"

*/
@article{DGL16,
  title={{Microservices: yesterday, today, and tomorrow}},
  author={Dragoni, Nicola and Giallorenzo, Saverio and Lafuente, Alberto Lluch and Mazzara, Manuel and Montesi, Fabrizio and Mustafin, Ruslan and Safina, Larisa},
  journal={arXiv preprint arXiv:1606.04036},
  year={2016}
}

@inproceedings{AAE16,
  title={{A Systematic Mapping Study in Microservice Architecture}},
  author={Alshuqayran, Nuha and Ali, Nour and Evans, Roger},
  booktitle={Service-Oriented Computing and Applications (SOCA), 2016 IEEE 9th International Conference on},
  pages={44--51},
  year={2016},
  organization={IEEE}
}

/*

- We define libraries as components that are linked into a program and called using in-memory function calls, while services are out-of-process components who communicate with a mechanism such as a web service request, or remote procedure call. (This is a different concept to that of a service object in many OO programs [3].

	3: Many object-oriented designers, including ourselves, use the term service object in the Domain-Driven Design sense for an object that carries out a significant process that isn't tied to an entity. This is a different concept to how we're using "service" in this article. Sadly the term service has both meanings and we have to live with the polyseme.

*/
@misc{FL17,
	author = {Fowler, Martin and Lewis, James},
	title = {Microservices},
	year = {2014 (accessed April 2, 2017)},
	howpublished = "\url{http://martinfowler.com/articles/microservices.html}"}
}

@article{Sny93,
  title={The essence of objects: Concepts and terms},
  author={Snyder, Alan},
  journal={IEEE software},
  volume={10},
  number={1},
  pages={31--42},
  year={1993},
  publisher={IEEE}
}