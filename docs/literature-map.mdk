[INCLUDE=style/marticle]

Bibliography : dipl
Bib Style    : style/keynat.bst
Cite All     : False

~ Abstract
In diesem Dokument sammle ich grundlegende Literatur die zu gewissen Themen/Kapiteln wichtig ist und ich somit verwenden sollte, *insofern* der Themenkomplex/Kapitel es in die finale Thesis schafft.
~

[TOC]

# Actors

* Actors - A Model of Concurrent Computation in Distributed Systems [@Agh85]
    : Die Diss von Agha. Da bereits im Titel auf DS bezogen, sicherlich ein wertvolle Quelle
* The Development of Erlang [@Arm97]
    : Actors ohne Erlang beschreiben geht wohl schlecht

# Concurrency and Distributed Programming

In diesem Kapitel geht es allgemein um den Zusammenhang von Concurrency bzw Concurrent Programming und Distributed Programming/Systems

* Concurrency and distribution in object-oriented programming [@Bri98]

# Distributed Systems 

* Distributed Systems: Concepts and Design [@Cou05]
    : scheint eine Art Standard-Bibel zu sein
* Introduction to Reliable and Secure Distributed Programming (2nd ed) [@Cac11]
    : großes allgemeines Buch, aber Kapitel 1 und 2 haben grundlegenden Blabla zu Concurrency and Distributed Programming. Führt die Konzepte von *process* und *link* ein. Enthält Erklärungen zu Crashes, Recovery, Safty and Liveness, Process and Messages, Link Failures, Perfect Links, Timing Assumptions (Sync, Async), Failure Detection, etc. **Alles Konzepte die ich ggf anreißen sollte/werde!**

# Event-driven Architecture

* Programming Without a Call Stack – Event-driven Architectures [@Hoh06]
    : scheint kein Peer-Reviewed Article zu sein, aber trotzdem guter Inhalt

# Distributed Agents

* A Virtual Machine for Distributed Agent-Oriented Programming [@Zho08]
    : Über die VM von CAOPLE

# Microservice

* Verification in the Age of Microservices [@Pan17]
    : wegen isolation und inherenter distribution kein Reasoning über Behaviour (vgl wie geht das bei Actors?). Kapitelüberschriften lassen auf brauchbaren Inhalt schließen

# Search Engine

* The anatomy of a large-scale hypertextual Web search engine [@Brin98]
    : Das Originalpaper über Google! Brauche ich umbedingt für die Suchmaschine
* Podcast search- user goals and retrieval technologies [@Bes10]
    : Allgemeine Referenz auf die ich mich beziehen kann, warum es bei einer Podcast Search Engine geht. Geht nicht auf neuere Standards ein wie SimpleChapters, etc

[BIB]