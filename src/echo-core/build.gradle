buildscript {
    repositories {
        mavenLocal()
        jcenter()
        maven { url 'https://plugins.gradle.org/m2/' }
    }
    dependencies {
//    classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.1'
        classpath 'net.ltgt.gradle:gradle-apt-plugin:0.13'
    }
}

defaultTasks 'clean build publishToMavenLocal'

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'application'
//apply plugin: 'com.github.johnrengelman.shadow' // to build fat jars with gradle
apply plugin: 'maven-publish'
apply plugin: 'net.ltgt.apt' // required by mapstruct

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8
assert System.properties['java.specification.version'] == '1.8'

group = 'net.irro.echo'
version '1.0-SNAPSHOT'
description = ''

mainClassName = 'echo.core.CoreApp'


compileJava {
    options.compilerArgs = [
        '-Amapstruct.suppressGeneratorTimestamp=true',
        '-Amapstruct.suppressGeneratorVersionInfoComment=true'
    ]
}

ext {
//    log4j_version = '2.9.1'
    slf4j_version = '1.7.25'
    logback_version = '1.2.3'
    lucene_version = '7.2.0'
}

repositories {
    mavenLocal()
    jcenter()
    mavenLocal()
    maven { url 'https://maven.icosillion.com/artifactory/open-source/' }
}

dependencies {
//  compile 'com.google.guava:guava:23.6-jre' // Google Core Libraries for Java

//    testImplementation 'junit:junit:4.12'

    compile "org.slf4j:slf4j-api:${slf4j_version}"
    //compile "org.slf4j:slf4j-simple:$slf4j_version"
    compile "ch.qos.logback:logback-classic:${logback_version}"
    compile "ch.qos.logback:logback-core:${logback_version}"

    compile "org.apache.lucene:lucene-core:${lucene_version}"
    compile "org.apache.lucene:lucene-queryparser:${lucene_version}"
    compile "org.apache.lucene:lucene-analyzers-common:${lucene_version}"

    compile 'org.jsoup:jsoup:1.11.2'                    // HTTP parser
    compile 'com.google.code.gson:gson:2.8.2'           // gson parser
    compile 'com.rometools:rome:1.9.0'
    compile 'com.rometools:rome-modules:1.9.0'

    compile 'org.hashids:hashids:1.0.3'

    compile 'org.mapstruct:mapstruct-jdk8:1.2.0.Final'
    testCompile 'org.testng:testng:6.10', 'org.easytesting:fest-assert:1.4'
    apt 'org.mapstruct:mapstruct-processor:1.2.0.Final'

    //compile group: 'javax.persistence', name: 'persistence-api', version: '1.0'
    compile group: 'org.hibernate', name: 'hibernate-entitymanager', version: '4.3.0.Final'
    compile group: 'org.hibernate.javax.persistence', name: 'hibernate-jpa-2.1-api', version: '1.0.2.Final'

    /*
    compile "joda-time:joda-time:2.9.9"
    compile "org.apache.logging.log4j:log4j-api:$log4j_version"
    compile "org.apache.logging.log4j:log4j-core:$log4j_version"
    compile "org.apache.logging.log4j:log4j-slf4j-impl:$log4j_version"
    compile "org.apache.solr:solr-solrj:$lucene_version" // TODO solr support is only experimental and not suitable for the scope of the thesis
    */

}

jar {
    doLast {
        exclude("**/resources/logback.xml")
//        exclude("**/logback.xml")
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}

// Generating gradle wrapper so people don't have to have the Gradle version preinstalled
task wrapper(type: Wrapper) {
    gradleVersion = '4.5'
}

run {
    standardInput = System.in
}

run.doFirst {
    // Environment variables go here.
}

