buildscript {
    repositories {
        mavenLocal()
        jcenter()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
//    classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.1'
    }
}

defaultTasks 'clean build'

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'application'
//apply plugin: 'com.github.johnrengelman.shadow' // to build fat jars with gradle
apply plugin: 'maven-publish'

sourceCompatibility=1.8
targetCompatibility=1.8
assert System.properties['java.specification.version'] == '1.8'

group = "echo.core"
version '1.0-SNAPSHOT'
description = ''

mainClassName = "echo.core.CoreApp"

ext {
//    log4jVersion = '2.9.1'
    slf4jVersion = '1.7.25'
    logbackVersion = '1.2.3'
    luceneVersion = "7.2.0"
}

repositories {
    mavenLocal()
    jcenter()
    maven { url 'https://maven.icosillion.com/artifactory/open-source/' }
}

dependencies {
//  compile 'com.google.guava:guava:23.6-jre' // Google Core Libraries for Java

    testImplementation 'junit:junit:4.12'

    compile "org.slf4j:slf4j-api:$slf4jVersion"
    //compile "org.slf4j:slf4j-simple:$slf4jVersion"
    compile "ch.qos.logback:logback-classic:$logbackVersion"
    compile "ch.qos.logback:logback-core:$logbackVersion"

    compile 'com.icosillion.podengine:podengine:2.2'

    compile "org.apache.lucene:lucene-core:$luceneVersion"
    compile "org.apache.lucene:lucene-queryparser:$luceneVersion"
    compile "org.apache.lucene:lucene-analyzers-common:$luceneVersion"

    /*
    compile "joda-time:joda-time:2.9.9"
    compile "org.apache.logging.log4j:log4j-api:$log4jVersion"
    compile "org.apache.logging.log4j:log4j-core:$log4jVersion"
    compile "org.apache.logging.log4j:log4j-slf4j-impl:$log4jVersion"
    compile 'rome:rome:1.0' // TODO replace with rome:2.0 once it is out
    compile "org.apache.solr:solr-solrj:$luceneVersion" // TODO solr support is only experimental and not suitable for the scope of the thesis
    */

}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}

// Generating gradle wrapper so people don't have to have the Gradle version preinstalled
task wrapper(type: Wrapper) {
  gradleVersion = '4.4.1'
}

run {
    standardInput = System.in
}

run.doFirst {
  // Environment variables go here.
}

