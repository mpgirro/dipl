// Adding ScalaStyle support
buildscript {
    repositories {
        mavenLocal()
        jcenter()
        maven { url 'https://plugins.gradle.org/m2/' }
    }
    dependencies {
        classpath 'org.github.ngbinh.scalastyle:gradle-scalastyle-plugin_2.11:0.9.0'
        //classpath 'org.liquibase:liquibase-gradle-plugin:1.2.4'
        classpath 'com.h2database:h2:1.4.196'
        //classpath 'org.yaml:snakeyaml:1.15'
    }
}

plugins {
    id 'org.liquibase.gradle' version '1.2.4'
}

defaultTasks 'run'

apply plugin: 'scala'
apply plugin: 'scalaStyle'
apply plugin: 'project-report'
apply plugin: 'application'
//apply plugin: 'org.liquibase.gradle'

sourceCompatibility=1.8
targetCompatibility=1.8
assert System.properties['java.specification.version'] == '1.8'

group 'net.irro.echo'
version '1.0-SNAPSHOT'
description = ''

mainClassName = 'echo.actor.EchoApp'

ext {
    scalaMajor = '2.12'
    scalaMinor = '4'
    akkaVersion = '2.5.8'
    akkaHttpVersion = '10.0.11'
    logbackVersion = '1.2.3'
}

repositories {
    mavenLocal()
    jcenter()
    maven { url 'https://maven.icosillion.com/artifactory/open-source/' }
}

dependencies {
    compile(
        [group: 'org.scala-lang', name: 'scala-compiler', version: "$scalaMajor.$scalaMinor"],
        [group: 'org.scala-lang', name: 'scala-library', version: "$scalaMajor.$scalaMinor"],
        [group: 'com.typesafe.akka', name: "akka-actor_$scalaMajor", version: akkaVersion],
    )

    compile "com.typesafe.akka:akka-slf4j_$scalaMajor:$akkaVersion"
    compile "com.typesafe.akka:akka-stream_$scalaMajor:$akkaVersion"
    compile "com.typesafe.akka:akka-http_$scalaMajor:$akkaHttpVersion"
    compile "com.typesafe.akka:akka-http-spray-json_$scalaMajor:$akkaHttpVersion"

    compile "ch.qos.logback:logback-classic:$logbackVersion"
    //compile group: 'org.slf4j', name: 'log4j-over-slf4j', version: '1.8.0-beta0'
    //compile group: 'org.slf4j', name: 'jcl-over-slf4j', version: '1.8.0-beta0'
    /*
    compile('org.slf4j:jcl-over-slf4j:1.8.0-beta0') {
        exclude group: 'commons-logging', module: 'commons-logging'
    }
    */

    compile 'net.irro.echo:echo-core:1.0-SNAPSHOT'

    compile 'org.jsoup:jsoup:1.11.2'                    // HTTP parser

    compile "com.github.swagger-akka-http:swagger-akka-http_$scalaMajor:0.11.2"
    compile "ch.megard:akka-http-cors_$scalaMajor:0.2.2"

    compile 'com.devskiller.friendly-id:friendly-id:1.0.0'

    compile group: 'javax.inject', name: 'javax.inject', version: '1'
    compile group: 'org.springframework', name: 'spring-context', version: '4.3.14.RELEASE'
    compile group: 'org.springframework.data', name: 'spring-data-jpa', version: '1.11.10.RELEASE'
    //compile group: 'org.hibernate', name: 'hibernate-core', version: '5.3.0.Beta1'  // note: not needed when using Spring-Data JPA --> produces an error
    compile group: 'org.hibernate', name: 'hibernate-entitymanager', version: '4.3.0.Final'
    compile group: 'org.hibernate.javax.persistence', name: 'hibernate-jpa-2.1-api', version: '1.0.2.Final'

    //testCompile 'com.h2database:h2:1.4.196' // TODO only use H2 in test phase
    compile 'com.h2database:h2:1.4.196'

    compile group: 'org.liquibase', name: 'liquibase-core', version: '3.5.3'
    runtime group: 'com.mattbertolini', name: 'liquibase-slf4j', version: '2.0.0'

    testCompile(
        [group: 'junit', name: 'junit', version: '4.12'],
        [group: 'org.specs2', name: "specs2-core_$scalaMajor", version: '4.0.2'],
        [group: 'org.specs2', name: "specs2-junit_$scalaMajor", version: '4.0.2'],
    )
}

// Specifying the main class for the 'application' plugin
jar {
    baseName = project.name
    manifest {
        attributes("Main-Class": mainClassName)
    }
}

// Workaround for Gradle 3.+ and IDEA (https://discuss.gradle.org/t/idea-integration-with-scala-plugin-broken-since-gradle-3-0-no-such-property-daemonserver/19159/2)
ScalaCompileOptions.metaClass.daemonServer = true
ScalaCompileOptions.metaClass.fork = true
ScalaCompileOptions.metaClass.useAnt = false
ScalaCompileOptions.metaClass.useCompileDaemon = false

tasks.withType(ScalaCompile) {
	scalaCompileOptions.additionalParameters = ["-unchecked", "-deprecation", "-feature", "-Xfatal-warnings", "-encoding", "utf8"]
}

// ScalaStyle config, by putting it to the project subdirectory, IDEA will automatically use it
scalaStyle {
    configLocation = "project/scalastyle_config.xml"
    includeTestSourceDirectory = true
    source = "src/main/scala"
    testSource = "src/test/scala"
}

// Run ScalaStyle with the tests
check {
//    dependsOn "scalaStyle" // TODO re-activate this
}

// specs2 console logging
test {
	testLogging.showStandardStreams = true
	systemProperty "specs2.commandline", "console"
}

// Generating gradle wrapper so people don't have to have the Gradle version preinstalled
task wrapper(type: Wrapper) {
    gradleVersion = '4.4.1'
}

run {
    standardInput = System.in
}


liquibase {
    activities {
        main {
            changeLogFile 'src/main/resources/db/liquibase/master.xml'
            //url 'jdbc:h2:mem:echo;FILE_LOCK=NO'
            url 'jdbc:h2:mem:echo;DATABASE_TO_UPPER=false'
            username 'sa'
            password ''
            /*
            changeLogParameters([ myToken: 'myvalue',
                                  second: 'secondValue'])
            */
        }
    }

    // runList = project.ext.runList
    // runList = 'main'
    runList = 'main'
}
